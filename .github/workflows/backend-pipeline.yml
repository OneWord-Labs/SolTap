name: Backend Pipeline

on:
  push:
    branches: [main, develop]
    paths:
      - 'bot/**'
      - '.github/workflows/backend-pipeline.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'bot/**'

env:
  NODE_VERSION: 18

jobs:
  verify:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: bot
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'bot/package-lock.json'

      - name: Install Dependencies
        run: npm ci

      - name: Type Check
        run: npm run type-check || true

      - name: Lint
        run: npm run lint || true

      - name: Test
        run: npm run test || true
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TEST_TELEGRAM_BOT_TOKEN }}

  deploy-preview:
    needs: verify
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: bot
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io (Preview)
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          # Create a unique app name for the preview deployment
          PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          APP_NAME="soltap-bot-preview-${PR_NUMBER}"
          
          # Create new app if it doesn't exist
          flyctl apps create ${APP_NAME} --org personal || true
          
          # Deploy to preview environment
          flyctl deploy --app ${APP_NAME} --config fly.preview.toml
          
          # Get the deployment URL
          DEPLOYMENT_URL="https://${APP_NAME}.fly.dev"
          echo "Preview deployment URL: $DEPLOYMENT_URL"
          echo "DEPLOYMENT_URL=$DEPLOYMENT_URL" >> $GITHUB_ENV

      - name: Comment PR
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ¤– Backend Preview deployed to: ${process.env.DEPLOYMENT_URL}`
            })

  deploy-production:
    needs: verify
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: bot
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io (Production)
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy --config fly.toml 