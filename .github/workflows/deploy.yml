name: Deploy
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Debug Environment
        run: |
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "Working directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "Git status:"
          git status
          echo "Git log (last 2 commits):"
          git log -2 --oneline
          echo "Environment variables (safe):"
          env | grep -v -i "key\|token\|secret\|password"

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm ci --verbose
          echo "Dependencies installed successfully"
          echo "node_modules contents:"
          ls -la node_modules | head -n 5

      - name: Verify Vercel Configuration
        run: |
          echo "Verifying Vercel configuration..."
          echo "VERCEL_ORG_ID length: ${#VERCEL_ORG_ID}"
          echo "VERCEL_PROJECT_ID length: ${#VERCEL_PROJECT_ID}"
          vercel --version
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          echo "Vercel configuration verified successfully"

      - name: Build
        run: |
          echo "Starting build..."
          npm run build
          echo "Build completed successfully"
          echo "Contents of dist directory:"
          ls -la dist || echo "dist directory not found!"
          echo "Contents of build artifacts:"
          find . -type f -name "*.js" -o -name "*.html" -o -name "*.css" | head -n 10
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          NODE_ENV: production
          BASE_URL: https://soltap-v1.vercel.app
          DEBUG: "*"

      - name: Deploy to Vercel
        run: |
          echo "Starting Vercel deployment..."
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} --debug 