name: Frontend Pipeline

on:
  push:
    branches: [main, develop]
    paths:
      - 'game/**'
      - '.github/workflows/frontend-pipeline.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'game/**'

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  verify:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: game
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Type Check
        run: npm run type-check || true

      - name: Lint
        run: npm run lint || true

      - name: Test
        run: npm run test || true

      - name: Build
        run: npm run build
        env:
          VITE_API_URL: http://localhost:3001
          VITE_TELEGRAM_BOT_USERNAME: test_bot
          VITE_DEBUG: true
          VITE_ENVIRONMENT: preview

  deploy-preview:
    needs: verify
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: game
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Install Dependencies
        run: npm ci
          
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Set Preview Environment Variables
        run: |
          PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          vercel env add VITE_API_URL https://soltap-bot-preview-${PR_NUMBER}.fly.dev --token=${{ secrets.VERCEL_TOKEN }} --environment=preview
          vercel env add VITE_TELEGRAM_BOT_USERNAME ${{ secrets.TELEGRAM_BOT_USERNAME_PREVIEW }} --token=${{ secrets.VERCEL_TOKEN }} --environment=preview
          vercel env add VITE_DEBUG true --token=${{ secrets.VERCEL_TOKEN }} --environment=preview
          vercel env add VITE_ENVIRONMENT preview --token=${{ secrets.VERCEL_TOKEN }} --environment=preview

      - name: Build Project
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel (Preview)
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "Preview deployment URL: $DEPLOYMENT_URL"
          echo "DEPLOYMENT_URL=$DEPLOYMENT_URL" >> $GITHUB_ENV

      - name: Comment PR
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Frontend Preview deployed to: ${process.env.DEPLOYMENT_URL}`
            })

  deploy-production:
    needs: verify
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: game
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Install Dependencies
        run: npm ci
          
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel (Production)
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} 